#include <Adafruit_NeoPixel.h>

#define LED_PIN 5
#define MIC_PIN 34
#define POT_PIN 35
#define NUM_LEDS 20

Adafruit_NeoPixel strip(NUM_LEDS, LED_PIN, NEO_GRB + NEO_KHZ800);

bool isOn = true;
unsigned long lastClapTime = 0;
int clapCount = 0;
int threshold = 700;
int colorIndex = 0;

uint32_t colors[] = {
  strip.Color(255, 0, 0),
  strip.Color(0, 255, 0),
  strip.Color(0, 0, 255),
  strip.Color(255, 255, 0)
};

void setup() {
strip.begin();
strip.show();
}

void loop() {
int micValue = analogRead(MIC_PIN);
int potValue = analogRead(POT_PIN);
threshold = map(potValue, 0, 4095, 300, 1000);

if (micValue > threshold) {
unsigned long currentTime = millis();

if (currentTime - lastClapTime < 500) {
clapCount++;
} else {
clapCount = 1;
 }

lastClapTime = currentTime;

if (clapCount == 1) {
smoothTransition();
} else if (clapCount == 2) {
toggleOnOff();
clapCount = 0;
 }
 }
}

void smoothTransition() {
if (isOn) {
int nextColorIndex = (colorIndex + 1) % 4;
 uint32_t startColor = colors[colorIndex];
uint32_t endColor = colors[nextColorIndex];

for (int i = 0; i <= 100; i++) {
uint8_t r = (((startColor >> 16) & 0xFF) * (100 - i) + ((endColor >> 16) & 0xFF) * i) / 100;
uint8_t g = (((startColor >> 8) & 0xFF) * (100 - i) + ((endColor >> 8) & 0xFF) * i) / 100;
uint8_t b = (((startColor) & 0xFF) * (100 - i) + ((endColor) & 0xFF) * i) / 100;

for (int j = 0; j < NUM_LEDS; j++) {
strip.setPixelColor(j, strip.Color(r, g, b));
}
strip.show();
delay(10);
}

colorIndex = nextColorIndex;
}
}

void toggleOnOff() {
isOn = !isOn;

if (isOn) {
smoothTransition();
} else {
strip.clear();
strip.show();
}
}
